on: [push]

name: Create Release

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'
      - name: Print Versions
        run: |
          python --version
          pip --version
      - name: Install requirements
        run: |
          pip install -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESPHome-Flasher -i icon.ico esphomeflasher\__main__.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
  build-windows-x86:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x86'
      - name: Print Versions
        run: |
          python --version
          pip --version
      - name: Install requirements
        run: |
          pip install -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESPHome-Flasher -i icon.ico esphomeflasher\__main__.py
      - name: See dist directory
        run: ls dist
      - uses: actions/upload-artifact@master
        with:
          name: Windows-x86
          path: dist/ESPHome-Flasher.exe

#  build-ubuntu:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Install Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: '3.7'
#      - name: Install dependencies
#        run: |
#          sudo apt install python-wxgtk3.0 build-essential libgtk-3-dev
#      - name: Print Versions
#        run: |
#          python --version
#          pip --version
#      - name: Install requirements
#        run: |
#          pip install pathlib2
#          pip install -r requirements_build.txt
#          pip install -e .
#      - name: Run PyInstaller
#        run: |
#          python -m PyInstaller.__main__ -F -w -n ESPHome-Flasher -i icon.ico esphomeflasher/__main__.py
#      - name: See dist directory
#        run: ls dist
#      - uses: actions/upload-artifact@master
#        with:
#          name: Ubuntu
#          path: dist


  build-macos:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Print Versions
        run: |
          python --version
          pip --version
      - name: Install requirements
        run: |
          pip install -r requirements_build.txt
          pip install -e .
      - name: Run PyInstaller
        run: |
          python -m PyInstaller.__main__ -F -w -n ESPHome-Flasher -i icon.icns esphomeflasher/__main__.py
      - name: See dist directory
        run: ls dist
      - uses: actions/upload-artifact@master
        with:
          name: MacOS
          path: dist/ESPHome-Flasher.app
